{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsObject","map","good","index","name","id","App","useState","None","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","toReverse","sortedGoods","Name","sort","good1","good2","localeCompare","Length","length","reverse","getSortedGoods","isResetVisible","buttons","text","classNames","isActive","onClick","className","button","type","cn","ReactDOM","render","document","getElementById"],"mappings":"6KA+BKA,E,sFAAAA,K,YAAAA,E,gBAAAA,E,mBAAAA,M,KAML,IAAMC,EAhCyB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuBCC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CAAEC,KAAMF,EAAMG,GAAIF,MAoBpC,IAAMG,EAAgB,WAC3B,MAAgCC,mBAAmBR,EAASS,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAtBR,SACEC,EACAL,EACAM,GAEA,IAAMC,EAAW,YAAOF,GAUxB,OARIL,IAAaV,EAASkB,MACxBD,EAAYE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMf,KAAKiB,cAAcD,EAAMhB,SAGhEK,IAAaV,EAASuB,QACxBN,EAAYE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMf,KAAKmB,OAASH,EAAMhB,KAAKmB,UAG7DR,EAAYC,EAAYQ,UAAYR,EAOtBS,CAAezB,EAAaS,EAAUE,GACrDe,EAAiBjB,IAAaV,EAASS,MAAQG,EAW/CgB,EAAoB,CACxB,CACEtB,GAAI,EACJuB,KAAM,sBACNC,WAAY,iBACZC,SAAUrB,IAAaV,EAASkB,KAChCc,QAAS,kBAAMrB,EAAYX,EAASkB,QAEtC,CACEZ,GAAI,EACJuB,KAAM,iBACNC,WAAY,oBACZC,SAAUrB,IAAaV,EAASuB,OAChCS,QAAS,kBAAMrB,EAAYX,EAASuB,UAEtC,CACEjB,GAAI,EACJuB,KAAM,UACNC,WAAY,oBACZC,SAAUnB,EACVoB,QA7BwB,WAC1BnB,GAAeD,MAgCjB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACGL,EAAQ1B,KAAI,SAAAgC,GAAM,OACjB,wBAEEC,KAAK,SACLF,UAAWG,IAAGF,EAAOJ,WAAY,CAC/B,YAAaI,EAAOH,WAEtBC,QAASE,EAAOF,QANlB,SAQGE,EAAOL,MAPHK,EAAO5B,OAWfqB,GACC,wBACEQ,KAAK,SACLF,UAAU,4BACVD,QAjDU,WAClBrB,EAAYX,EAASS,MACrBI,GAAc,IA4CR,sBAUJ,6BACGC,EAAaZ,KAAI,YAAmB,IAAhBG,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACzB,OACE,oBAAI,UAAQ,OAAZ,SAA6BD,GAALC,YC7HpC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7eb72580.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface Good {\n  name: string;\n  id: number;\n}\n\ninterface Button {\n  id: number;\n  text: string;\n  classNames: string;\n  isActive: boolean;\n  onClick: () => void;\n}\n\nenum SortType {\n  Name = 'name',\n  Length = 'length',\n  None = 'no-sorting',\n}\n\nconst goodsObject: Good[] = goodsFromServer\n  .map((good, index) => ({ name: good, id: index }));\n\nfunction getSortedGoods(\n  goods: Good[],\n  sortType: SortType,\n  toReverse: boolean,\n): Good[] {\n  const sortedGoods = [...goods];\n\n  if (sortType === SortType.Name) {\n    sortedGoods.sort((good1, good2) => good1.name.localeCompare(good2.name));\n  }\n\n  if (sortType === SortType.Length) {\n    sortedGoods.sort((good1, good2) => good1.name.length - good2.name.length);\n  }\n\n  return toReverse ? sortedGoods.reverse() : sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<SortType>(SortType.None);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getSortedGoods(goodsObject, sortType, isReversed);\n  const isResetVisible = sortType !== SortType.None || isReversed;\n\n  const handleReverseButton = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.None);\n    setIsReversed(false);\n  };\n\n  const buttons: Button[] = [\n    {\n      id: 1,\n      text: 'Sort alphabetically',\n      classNames: 'button is-info',\n      isActive: sortType === SortType.Name,\n      onClick: () => setSortType(SortType.Name),\n    },\n    {\n      id: 2,\n      text: 'Sort by length',\n      classNames: 'button is-success',\n      isActive: sortType === SortType.Length,\n      onClick: () => setSortType(SortType.Length),\n    },\n    {\n      id: 3,\n      text: 'Reverse',\n      classNames: 'button is-warning',\n      isActive: isReversed,\n      onClick: handleReverseButton,\n    },\n  ];\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        {buttons.map(button => (\n          <button\n            key={button.id}\n            type=\"button\"\n            className={cn(button.classNames, {\n              'is-light': !button.isActive,\n            })}\n            onClick={button.onClick}\n          >\n            {button.text}\n          </button>\n        ))}\n\n        {isResetVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(({ name, id }) => {\n          return (\n            <li data-cy=\"Good\" key={id}>{name}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}